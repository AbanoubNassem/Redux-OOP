{"version":3,"sources":["rn-async-storage-actions.ts"],"names":["AsyncStorage","ActionProvider","StorageActionTypes","reducer","PREFIX","RNAsyncStorageActions","storage","getAllKeys","keys","multiGet","stores","map","_result","i","store","key","startsWith","value","substring","length","JSON","parse","dispatchAction","STORAGE_LOADED","clear","STORAGE_CLEARED","object","Object","index","setItem","stringify","STORAGE_UPDATED","deleted","Array","isArray","forEach","removeItem","STORAGE_REMOVED"],"mappings":"+YAAA,MAAOA,CAAAA,YAAP,KAAyB,uCAAzB,CAEA,OAASC,cAAT,KAA+B,wBAA/B,CAEA,MAAOC,CAAAA,kBAAP,KAA+B,gBAA/B,CAEA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CAEA,GAAMC,CAAAA,MAAM,CAAG,YAAf,CAEA,UAAaC,CAAAA,qBAAb,wbA2DEF,OA3DF,CA2DY,iBAAMA,CAAAA,OAAN,EA3DZ,2NAGUG,OAHV,CAGyB,EAHzB,kDAKuBN,YAAY,CAACO,UAAb,EALvB,SAKUC,IALV,gEAMyBR,YAAY,CAACS,QAAb,CAAsBD,IAAtB,CANzB,SAMUE,MANV,eAQIA,MAAM,CAACC,GAAP,CAAW,SAACC,OAAD,CAAeC,CAAf,CAA0BC,KAA1B,CAAyC,CAClD,GAAMC,CAAAA,GAAG,CAAGD,KAAK,CAACD,CAAD,CAAL,CAAS,CAAT,CAAZ,CACA,GAAIE,GAAG,CAACC,UAAJ,CAAeZ,MAAf,CAAJ,CAA4B,CAC1B,GAAMa,CAAAA,KAAK,CAAGH,KAAK,CAACD,CAAD,CAAL,CAAS,CAAT,CAAd,CACAP,OAAO,CAACS,GAAG,CAACG,SAAJ,CAAcd,MAAM,CAACe,MAArB,CAAD,CAAP,CAAwCC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAxC,CACAX,OAAO,CAACS,GAAD,CAAP,CACD,CACF,CAPD,EASA,KAAKO,cAAL,CAAoBpB,kBAAkB,CAACqB,cAAvC,CAAuDjB,OAAvD,EAjBJ,gCAmBWA,OAnBX,+NAuBUA,OAvBV,CAuByB,EAvBzB,mDAyBUN,YAAY,CAACwB,KAAb,EAzBV,SA2BI,KAAKF,cAAL,CAAoBpB,kBAAkB,CAACuB,eAAvC,CAAwDnB,OAAxD,EA3BJ,iCA6BWA,OA7BX,6GAgCqBoB,MAhCrB,8IAiCUlB,IAjCV,CAiCiBmB,MAAM,CAACnB,IAAP,CAAYkB,MAAZ,CAjCjB,CAkCaE,KAlCb,CAkCqB,CAlCrB,aAkCwBA,KAAK,CAAGpB,IAAI,CAACW,MAlCrC,2BAmCYJ,GAnCZ,CAmCkBP,IAAI,CAACoB,KAAD,CAnCtB,mDAqCY5B,YAAY,CAAC6B,OAAb,CAAqBzB,MAAM,CAAGW,GAA9B,CAAmCK,IAAI,CAACU,SAAL,CAAeJ,MAAM,CAACX,GAAD,CAArB,CAAnC,CArCZ,SAkC6Ca,KAAK,EAlClD,gEAwCW,KAAKN,cAAL,CAAoBpB,kBAAkB,CAAC6B,eAAvC,CAAwDL,MAAxD,CAxCX,yPA2CelB,IA3Cf,kDA2C8C,EA3C9C,CA4CUwB,OA5CV,CA4CyB,EA5CzB,KA8CQC,KAAK,CAACC,OAAN,CAAc1B,IAAd,CA9CR,0BA+CMA,IAAI,CAAC2B,OAAL,CAAa,iBAAMpB,GAAN,wKACLf,YAAY,CAACoC,UAAb,CAAwBhC,MAAM,CAAGW,GAAjC,CADK,SAEXiB,OAAO,CAACjB,GAAD,CAAP,CAAe,MAAf,CAFW,yDAAb,EA/CN,gFAoDYf,YAAY,CAACoC,UAAb,CAAwBhC,MAAM,CAAGI,IAAjC,CApDZ,SAqDMwB,OAAO,CAACxB,IAAD,CAAP,CAAgB,MAAhB,CArDN,wCAwDW,KAAKc,cAAL,CAAoBpB,kBAAkB,CAACmC,eAAvC,CAAwDL,OAAxD,CAxDX,+FAA2C/B,cAA3C","sourcesContent":["import AsyncStorage from \"@react-native-community/async-storage\";\n\nimport { ActionProvider } from \"../../action-providers\";\nimport { IAsyncStorageActionProvider } from \"./index\";\nimport StorageActionTypes from \"./action-types\";\n\nimport reducer from \"./reducer\";\n\nconst PREFIX = \"REDUX_OOP_\";\n\nexport class RNAsyncStorageActions extends ActionProvider\n  implements IAsyncStorageActionProvider {\n  async load() {\n    const storage: any = {};\n\n    const keys = await AsyncStorage.getAllKeys();\n    const stores = await AsyncStorage.multiGet(keys as any);\n\n    stores.map((_result: any, i: number, store: any) => {\n      const key = store[i][0];\n      if (key.startsWith(PREFIX)) {\n        const value = store[i][1];\n        storage[key.substring(PREFIX.length)] = JSON.parse(value);\n        storage[key];\n      }\n    });\n\n    this.dispatchAction(StorageActionTypes.STORAGE_LOADED, storage);\n\n    return storage;\n  }\n\n  async clear() {\n    const storage: any = {};\n\n    await AsyncStorage.clear();\n\n    this.dispatchAction(StorageActionTypes.STORAGE_CLEARED, storage);\n\n    return storage;\n  }\n\n  async saveOrUpdate(object: any) {\n    const keys = Object.keys(object);\n    for (let index = 0; index < keys.length; index++) {\n      const key = keys[index];\n\n      await AsyncStorage.setItem(PREFIX + key, JSON.stringify(object[key]));\n    }\n\n    return this.dispatchAction(StorageActionTypes.STORAGE_UPDATED, object);\n  }\n\n  async remove(keys: string | Array<string> = []) {\n    const deleted: any = {};\n\n    if (Array.isArray(keys)) {\n      keys.forEach(async key => {\n        await AsyncStorage.removeItem(PREFIX + key);\n        deleted[key] = \"null\";\n      });\n    } else {\n      await AsyncStorage.removeItem(PREFIX + keys);\n      deleted[keys] = \"null\";\n    }\n\n    return this.dispatchAction(StorageActionTypes.STORAGE_REMOVED, deleted);\n  }\n\n  reducer = () => reducer;\n}\n"]}